name: inventorymanagement

services:
  postgres:
    container_name: inventory-management-postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: postgres
    networks: [inventorymanagementnetwork]
    ports: ["5432:5432"]
    volumes:
      - type: volume
        source: postgres-data
        target: /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    depends_on: [postgres]
    container_name: inventory-management-pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    networks: [inventorymanagementnetwork]
    ports: ["5050:80"]
  
  webapi:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      - ConnectionStrings__DefaultConnection=Host=postgres:5432;UserName=user;Password=secret;Database=postgres
      - ASPNETCORE_ENVIRONMENT=Development
    networks: [inventorymanagementnetwork]
    ports: ["8080:8080", "8081:8081"]

networks:
  inventorymanagementnetwork:
    name: inventorymanagementnetwork

volumes:
  postgres-data: