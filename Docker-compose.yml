name: inventorymanagement

services:
  postgres:
    container_name: inventory-management-postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    networks: [ inventorymanagementnetwork ]
    ports: [ "${DB_PORT}:${DB_PORT}" ]
    volumes:
      - type: volume
        source: postgres-data
        target: /var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    depends_on: [ postgres ]
    container_name: inventory-management-pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    networks: [ inventorymanagementnetwork ]
    ports: [ "5050:80" ]
  
  webapi:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - ASPNETCORE_ENVIRONMENT=Development
    networks: [ inventorymanagementnetwork ]
    ports: [ "8080:8080", "8081:8081" ]

networks:
  inventorymanagementnetwork:
    name: inventorymanagementnetwork

volumes:
  postgres-data:
